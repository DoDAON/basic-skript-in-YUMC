command /party [<text>] [<text>] [<text>]:
    description: 파티를 생성하거나 관리합니다.
    usage: /party create <파티 이름> | /party add <파티 이름> <유저 이름>
    trigger:
        #FIXME: 파티 데이터 전부 초기화 필요. / 테스트 용으로 한 게 많음
        if arg 1 is "create":
            if arg 2 is set:
                #TODO: 전체 파티 리스트(서버)에 할당하는 기능, 만약 같은 이름의 파티가 있으면 생성 불가능
                set {_party} to arg 2
                set {_player} to uuid of player
                
                if {party::%{_party}%} is not set:
                    set {party::%{_party}%} to {_party}
                    set {party::%{_party}%::owner} to {_player}
                    add {_player} to {party::%{_party}%::members::*}
                    add {_party} to {partylist::%{_player}%::*}
                    add {party::%{_party}%} to {YUMCpartylist::*}
                    message "파티 %{_party}%가 생성되었습니다!" to player
                else:
                    message "%{_party}%의 이름을 가진 파티가 이미 존재합니다. 다른 이름으로 생성해주세요." to player
            else:
                message "사용법: /party create <파티 이름>" to player
        else if arg 1 is "add":
            if arg 3 is set:
                set {_party} to arg 2
                set {_player} to HangulToUUID(arg 3)
                #TODO: 정상적으로 실행되는지 확인
                if uuid of player is {party::%{_party}%::owner}:
                    if {_player} is set:
                        loop {party::%{_party}%::members::*}:
                            if {_player} is loop-value:
                                set {_addValue} to true
                            else:
                                set {_addValue} to false
                        if {_addValue} is false:
                            set {_username} to {_player} parsed as offline player
                            if {partyaccept::%{_username}%} is not set:
                                set {partyaccept::%{_username}%} to "none"
                                message "%{nick::%{_player}%}%(%{_username}%)에게 요청하였습니다. 상대방이 파티 초대를 수락할 때까지 기다려주세요." to player
                                message "%{nick::%uuid of player%}%(이)가 %{_party}%(으)로 파티 초대하였습니다. 수락 : /party accept, 거절 : /party deny" to {_username}
                                loop 10 times:
                                    if {partyaccept::%{_username}%} is "true":
                                        add {_player} to {party::%{_party}%::members::*}
                                        add {_party} to {partylist::%{_player}%::*}
                                        message "플레이어 %arg 3%(이)가 파티 %{_party}%에 추가되었습니다!" to player
                                        message "당신은 파티 %{_party}%에 추가되었습니다!" to {_username}
                                        delete {partyaccept::%{_username}%}
                                        exit loop
                                    else if {partyaccept::%{_username}%} is "false":
                                        message "플레이어 %arg 3%(이)가 파티 초대를 거절하였습니다." to player
                                        message "파티 초대를 거절하였습니다." to {_username}
                                        delete {partyaccept::%{_username}%}
                                        exit loop
                                    wait 1 second
                                wait 2 ticks
                                if {partyaccept::%{_username}%} is true:
                                    add {_player} to {party::%{_party}%::members::*}
                                    add {_party} to {partylist::%{_player}%::*}
                                    message "플레이어 %arg 3%(이)가 파티 %{_party}%에 추가되었습니다!" to player
                                    message "당신은 파티 %{_party}%에 추가되었습니다!" to {_username}
                                    delete {partyaccept::%{_username}%}
                                else if {partyaccept::%{_username}%} is false:
                                    message "플레이어 %arg 3%(이)가 파티 초대를 거절하였습니다." to player
                                    message "파티 초대를 거절하였습니다." to {_username}
                                    delete {partyaccept::%{_username}%}
                                else if {partyaccept::%{_username}%} is set:
                                    message "시간이 초과되었습니다." to player
                                    message "시간이 초과되었습니다." to {_username}
                                    delete {partyaccept::%{_username}%}
                            else:
                                message "이미 파티 초대가 진행중입니다!" to player
                        else:
                            message "해당 플레이어는 이미 파티에 소속되어 있습니다!" to player
                    else:
                        message "사용법: /party add <파티 이름> <유저 한글 이름>" to player
                else:
                    message "당신은 파티장이 아닙니다!" to player
            else:
                message "사용법: /party add <파티 이름> <유저 한글 이름>" to player


        else if arg 1 is "accept":
            set {_player} to uuid of player
            set {_username} to {_player} parsed as offline player
            if {partyaccept::%{_username}%} is set:
                set {partyaccept::%{_username}%} to "true"
            
        else if arg 1 is "deny":
            set {_player} to uuid of player
            set {_username} to {_player} parsed as offline player
            if {partyaccept::%{_username}%} is set:
                set {partyaccept::%{_username}%} to "false"

        #파티원 제거 /party expel [파티이름] [유저 한글 이름]
        else if arg 1 is "expel":
            if arg 3 is set:
                set {_party} to arg 2
                set {_player} to HangulToUUID(arg 3)
                if uuid of player is {party::%{_party}%::owner}:
                    if {_player} is not {party::%{_party}%::owner}:
                        loop {party::%{_party}%::members::*}:
                            if {_player} is loop-value:
                                set {_key} to true
                                exit loop
                            else:
                                set {_key} to false
                        if {_key} is true:
                            remove {_player} from {party::%{_party}%::members::*}
                            remove {_party} from {partylist::%{_player}%::*}
                            message "%{nick::%{_player}%}%(이)가 파티에서 추방되었습니다." to player
                        else:
                            message "해당 플레이어는 파티에 존재하지 않습니다. 다시 입력해주세요." to player
                    else:
                        message "&e파티장&f을 추방할 수 없습니다!" to player
                else:
                    message "당신은 파티장이 아닙니다!" to player
            else:
                message "사용법: /party expel <파티 이름> <유저 한글 이름>" to player

        #파티 탈퇴: /party exit <파티 이름>
        else if arg 1 is "exit":
            if arg 2 is set:
                set {_party} to arg 2
                set {_player} to uuid of player
                if {_player} is not {party::%{_party}%::owner}:
                    loop {party::%{_party}%::members::*}:
                        if {_player} is loop-value:
                            set {_key} to true
                            exit loop
                        else:
                            set {_key} to false
                    if {_key} is true:
                        remove {_player} from {party::%{_party}%::members::*}
                        remove {_party} from {partylist::%{_player}%::*}
                        message "파티 %{_party}%(을)를 탈퇴하였습니다." to player
                    else:
                        message "당신은 해당 파티에 존재하지 않습니다! 파티명을 다시 확인해주세요." to player
                else:
                    message "당신은 &e파티장&f입니다. 파티장은 파티에서 나갈 수 없습니다." to player
            else:
                message "사용법: /party exit <파티 이름>" to player



        #TODO: 파티 제거 /party delete [파티이름] //// 한 번 더 확인문구도 출력
        #배열 제거는 어떻게 하는 거지?
        else if arg 1 is "delete":
            if arg 2 is set:
                set {_party} to arg 2
                set {_name} to uuid of player
                if uuid of player is {party::%{_party}%::owner}:
                    if {resetValue::%player%} is not set:
                        message "&4(경고) 이 명령어는 파티를 지웁니다." to player
                        message "정말 지우겠습니까? (다음을 입력해주세요. /ptdelete Y)" to player
                        message "*만약 파티 삭제를 원치 않으시면 >> /ptdelete N << 를 입력해주십시오." to player
                        set {resetValue::%player%} to 1
                        set {resetValueParty::%player%} to {_party}
                    else if {resetValue::%player%} is set:
                        message "현재 파티 삭제가 진행중입니다! (해당 파티 : %{resetValueParty::%player%}%)" to player
                        message "삭제 진행 중지 : /ptdelete N" to player
                else:
                    message "당신은 파티장이 아닙니다!" to player
            else:
                message "사용법: /party delete <파티 이름>" to player
            

        #파티장 양도 /party handover [파티이름] [유저 한글 이름] /// 커맨드 실행 시 실행자가 파티장인지 확인해야 함
        else if arg 1 is "handover":
            if arg 3 is set:
                set {_party} to arg 2 # 만약에 파티 리스트 돌렸는데 자기 파티 아니면 안 되게
                set {_name} to HangulToUUID(arg 3)
                loop {partylist::%{_name}%::*}:
                    if {_party} is loop-value:
                        set {_key} to true
                    else:
                        set {_key} to false
                if {_key} is true:
                    if uuid of player is {party::%{_party}%::owner}:
                        loop {party::%{_party}%::members::*}:
                            if {_name} is loop-value:
                                set {_key2} to true
                                exit loop
                            else:
                                set {_key2} to false
                        if {_key2} is true:
                            set {party::%{_party}%::owner} to arg 3
                            message "성공적으로 파티장 양도에 성공했습니다." to player
                        else:
                            message "파티에 존재하지 않는 유저입니다!."
                    else:
                        message "당신은 파티장이 아닙니다!" to player
                else:
                    message "해당 파티의 소속이 아닙니다." to player
            else:
                message "사용법: /party handover <파티이름> <유저 한글 이름>" to player
        
        



        else if arg 1 is "testdelList":
            if player is op:
                set {_party} to arg 2
                set {_player} to HangulToUUID(arg 3)
                subtract {_party} from {partylist::%{_player}%::*}
                message "성공적" to player

        else if arg 1 is "testmb":
            if player is op:
                #테스트 용 멤버 확인
                set {_player} to HangulToUUID(arg 2)
                set {_print} to ""
                loop {partylist::%{_player}%::*}:
                    set {_print} to "%{_print}%%loop-value%, "
                message "%{_print}%" to player
                #message "%{party::}%

        else if arg 1 is "testAllmb":
            if player is op:
                set {_party} to arg 2
                message "%{party::%{_party}%::members::*}%" to player
                loop {party::%{_party}%::members::*}:
                    set {_testMB} to loop-value
                    message "%{nick::%{_testMB}%}%" to player
        else if arg 1 is "testowner":
            if player is op:
                set {_owner} to {party::%arg 2%::owner}
                message "%{_owner}%" to player
                message "%{nick::%{_owner}%}%" to player

        else if arg 1 is "testdeletept":
            if player is op:
                set {_party} to arg 2
                delete {party::%{_party}%}
                delete {party::%{_party}%::members::*}
                delete {party::%{_party}%::owner}
                message "성공함" to player
        else if arg 1 is "selectTestDelete":
            if player is op:
                set {_party} to arg 2
                set {_player} to HangulToUUID(arg 3)
                # 파티 초기화, 파티장 초기화, 파티 멤버 초기화
                
                loop {party::%{_party}%::members::*}:
                    #FIXME: 리스트에서 제거가 안 됨. UUID 받은 거 맞나 모르겠음
                    #이유를 찾았다. 애초에 파티멤버가 초기화되어 있었네 ㅋㅋㅋㅋㅋㅋㅋㅋ 그러니까 제거가 안 됐지
                    set {_memberValue} to HangulToUUID(loop-value)
                    remove {_party} from {partylist::%{_memberValue}%::*}
                    remove loop-value from {party::%{_party}%::members::*}
                remove {_party} from {partylist::%{_player}%::*}
                delete {party::%{_party}%}
                delete {party::%{_party}%::members::*}
                delete {party::%{_party}%::owner}
                message "성공적으로 제거되었습니다." to player
                delete {resetValue::%player%}
                delete {resetValueParty::%player%}


        #csv 파일에 확인하고 변수명 그대로 복사해와서 arg 2에 넣으면 그 변수 제거
        else if arg 1 is "opdel":
            if player is op:
                message "%{%arg 2%}%" to player
                delete {%arg 2%}
                




        
        #TODO: 파티 중복 이름 제거
        else if arg 1 is "list":
            set {_player} to uuid of player
            #set {_party} to arg 2
            set {_print} to ""
            loop {partylist::%{_player}%::*}:
                set {_print} to "%{_print}%%loop-value%, "
            message "파티 리스트 : %{_print}%" to player
            #message "%{nick::%{partylist::%{_party}%::owner}%}%"
        
        else if arg 1 is "member":
            if arg 2 is set:
                set {_party} to arg 2 
                set {_name} to uuid of player
                # 만약에 파티 리스트 돌렸는데 자기 파티 아니면 안 되게 하는 기능
                loop {partylist::%{_name}%::*}:
                    if {_party} is loop-value:
                        set {_key} to true
                        exit loop
                    else:
                        set {_key} to false
                if {_key} is true:
                    set {_party} to arg 2
                    set {_print} to ""
                    loop {party::%{_party}%::members::*}:
                        set {_name} to "%loop-value%"
                        set {_print} to "%{_print}%%{nick::%{_name}%}%, "
                    message "%{_party}%에 속한 멤버는 %{_print}%입니다."
                else:
                    message "파티명을 잘못 입력했거나 자신이 속한 파티가 아닙니다!" to player
            else:
                message "사용법: /party member <파티 이름>" to player
            
        else:
            #파티생성, 파티원 추가, 파티원 제거, (파티제거), 파티 리스트, 파티 멤버
            message "파티 생성: /party create <파티 이름>" to player
            message "파티원 추가: /party add <파티 이름> <유저 한글 이름>" to player
            message "파티원 추방: /party expel <파티 이름> <유저 한글 이름>" to player
            message "파티 탈퇴: /party exit <파티 이름>" to player
            message "파티장 양도: /party handover <파티 이름> <유저 한글 이름>" to player
            message "파티 제거: /party delete <파티 이름>" to player
            message "속한 파티 확인: /party list" to player
            message "파티 멤버 확인: /party member <파티 이름>" to player

            

command /ptdelete [<text>]:
    trigger:
        if arg 1 is set:
            if {resetValue::%player%} is set:
                if arg 1 is "Y":
                    set {_party} to {resetValueParty::%player%}
                    set {_player} to uuid of player
                    # 파티 초기화, 파티장 초기화, 파티 멤버 초기화
                    
                    loop {party::%{_party}%::members::*}:
                        set {_memberValue} to loop-value
                        remove {_party} from {partylist::%{_memberValue}%::*}
                        remove {_memberValue} from {party::%{_party}%::members::*}
                        remove loop-value from {party::%{_party}%::members::*}
                    remove {_party} from {partylist::%{_player}%::*}
                    delete {party::%{_party}%}
                    delete {party::%{_party}%::members::*}
                    delete {party::%{_party}%::owner}
                    message "성공적으로 제거되었습니다." to player
                    delete {resetValue::%player%}
                    delete {resetValueParty::%player%}
                else if arg 1 is "N":
                    message "파티 삭제가 취소되었습니다." to player
                    delete {resetValue::%player%}
                    delete {resetValueParty::%player%}

# to = "=" / 정의
# set : 선언
# -> {} 안에있는거 무조건 어떤자료형이던 변수임
# -> formatting을 위해 message 같은 출력문에서 %사이에 넣어야댐
# -> 일반적으로 어떤 이벤트라던가 조건문을 활용할때는 % 필요없지
# Var::
# * : 배열 선언 (:: 이후)
# {a::{_b}::c::*}
# a : 변수명 b(위의 경우 UUID라는 고유값이 들어감. 지역변수 선언 및 정의), c : 하위 디렉토리 (계속 만들 수 있음)






