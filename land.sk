command /land [<text>]:
    description: 현재 청크 위치를 표시합니다.
    trigger:
        if player's world is not "campus":
            if player's world is not "world_nether":
                set {_chunk} to chunk at player
                set {_owner} to {owned_chunk::%{_chunk}%}
                if {_owner} is not set:
                    if arg 1 is not set:
                        set {_chunk} to chunk at player
                        message "현재 청크: (%{_chunk}%의 x 좌표, %{_chunk}%의 z 좌표)" to player
                        message "&e토지 구매를 희망할 시 &f/land buy&e를 입력해주세요.&7(필요 재화는 다이아 1개이며 판매 시 재화 회수가 불가능합니다!)" to player
                    else if arg 1 is "buy":
                        if player has 1 diamond:
                            remove 1 diamond from player
                            set {_chunk} to chunk at player
                            set {owned_chunk::%{_chunk}%} to uuid of player
                            message "&e땅 구매 완료!" to player
                        else:
                            message "&4다이아몬드가 부족합니다." to player
                else if {_owner} is set:
                    if arg 1 is not set:
                        message "현재 청크: (%{_chunk}%의 x 좌표, %{_chunk}%의 z 좌표)" to player
                        message "&e토지 판매를 희망할 시 &f/land sell&e를 입력해주세요.&7(토지 판매 시 재화 회수가 불가능합니다!)" to player
                    else if arg 1 is "sell":
                        if {owned_chunk::%{_chunk}%} is uuid of player:
                            set {_chunk} to chunk at player
                            delete {owned_chunk::%{_chunk}%}
                            message "&e땅 판매 완료!" to player
                        else:
                            message "&4(경고) 타인의 땅을 판매할 수 없습니다!" to player
                #토지 판매
                
            else:
                message "네더 월드에서는 토지를 구매하실 수 없습니다." to player
        else:
            message "캠퍼스월드에서는 토지를 구매하실 수 없습니다." to player



on place:
    set {_test} to false
    set {_chunk} to chunk at event-block
    set {_owner} to {owned_chunk::%{_chunk}%}

    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false


    #set {_isinParty::*} to {partylist::%{_owner}%::*}
    if {_test} is false:
        if {_owner} is set:
            if {_owner} is not uuid of player:
                cancel event
                message "타인의 땅에서 블록을 설치할 수 없습니다." to player

on break:
    set {_test} to false
    set {_chunk} to chunk at event-block
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    
    if {_test} is false:
        if {_owner} is set:
            if {_owner} is not uuid of player:
                cancel event

on break:
    set {_test} to false
    set {_chunk} to chunk at event-entity
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if event-entity is not player:
        if {_test} is false:
            if {_owner} is set:
                if {_owner} is not uuid of player:
                    cancel event

on stepping on a pressure plate:
    set {_test} to false
    set {_chunk} to chunk at event-block
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if {_test} is false:
        if {_owner} is set:
            if {_owner} is not uuid of player:
                cancel event


on rightclick:
    set {_test} to false
    set {_chunk} to chunk at event-block
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if player is not op:
        if {_test} is false:
            if "%event-block%" contains "slab":
                set {_index} to true
            else if "%event-block%" contains "carpet":
                set {_index} to true
            else if event-block is crafting table:
                set {_index} to true
            else:
                if {_owner} is set:
                    if {_owner} is not uuid of player:
                        cancel event


#FIXME: 케이크 안 됨



#엔티티 상대로 우클릭


on rightclick on entity:
    set {_test} to false
    set {_chunk} to chunk at event-entity
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if player is not op:
        if {_test} is false:
            if {_owner} is set:
                if {_owner} is not uuid of player:
                    cancel event



#on vehicle enter:
    #FIXME: event-entity가 유저인 거 같음
    #특정 엔티티만 탑승 제한 거는 게 안 되는 거 같음
    #vehicle의 위치를 받아야 하는데 사람이 받음

    #set {_test} to false
    #set {_chunk} to chunk at entity
    #set {_owner} to {owned_chunk::%{_chunk}%}
    #loop {partylist::%{_owner}%::*}:
        #if {_test} is true:
            #exit loop
        #else:
            #loop {party::%loop-value-1%::members::*}:
                #if uuid of event-entity is loop-value-2:
                    #set {_test} to true
                    #exit loop
                #else:
                    #set {_test} to false
    #event-entity is player
    #if {_test} is false:
        #if {_owner} is set:
            #if {_owner} is not uuid of event-entity:
                #임시 비활성
                #cancel event
                #message "test" to player





on damage:
    set {_test} to false
    set {_chunk} to chunk at victim
    set {_owner} to {owned_chunk::%{_chunk}%}
    damager is player
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of damager is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if {_test} is false:
        if victim is animal:
            if {_owner} is set:
                if {_owner} is not uuid of damager:
                    cancel event
                    send action bar "&c경고! &e타인의 땅에서 동물을 해칠 수 없습니다!" to damager
        else if victim is item frame:
            if {_owner} is set:
                if {_owner} is not uuid of damager:
                    cancel event
                    send action bar "&c경고! &e타인의 아이템액자에 접근할 수 없습니다!" to damager
        else if victim is armor stand:
            if {_owner} is set:
                if {_owner} is not uuid of damager:
                    cancel event
                    send action bar "&c경고! &e타인의 아머스탠드에 접근할 수 없습니다!" to damager


on break of item frame:
    set {_test} to false
    set {_chunk} to chunk at event-entity
    set {_owner} to {owned_chunk::%{_chunk}%}
    loop {partylist::%{_owner}%::*}:
        if {_test} is true:
            exit loop
        else:
            loop {party::%loop-value-1%::members::*}:
                if uuid of player is loop-value-2:
                    set {_test} to true
                    exit loop
                else:
                    set {_test} to false
    if {_test} is false:
        if {_owner} is set:
            if {_owner} is not uuid of player:
                if "%item of event-entity%" contains "air":
                    cancel event










command /name [<text>]:
    trigger:
        #TEST command
        if player is op:
            set {_test} to {nick::%arg 1%}
            message "%{_test}%" to player